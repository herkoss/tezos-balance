{"version":3,"sources":["components/FindBalance/FindBalances.module.css","components/Table/Table.tsx","components/FindBalance/FindBalance.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Table/Table.module.css","App.module.css"],"names":["module","exports","Table","balances","deleteBalanceFromBalances","className","styles","caption","map","publicKeyHash","balance","id","String","Math","floor","delete","onClick","FindBalance","isResponseValid","setIsResponseValid","getBalanceByKey","setPublicKeyHash","container","cotrolsWrapper","cn","inputPublicKeyHash","invalidPublicKeyHash","value","onChange","event","target","trim","onFocus","placeholder","add","help","tezos","TezosToolkit","App","useState","setBalances","useEffect","window","localStorage","getItem","JSON","parse","setItem","stringify","a","tz","getBalance","prevState","Array","isArray","c","Number","Date","filteredBalances","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa8aaa63.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FindBalances_container__TkdRc\",\"cotrolsWrapper\":\"FindBalances_cotrolsWrapper__1EcQ1\",\"inputPublicKeyHash\":\"FindBalances_inputPublicKeyHash__1MV7E\",\"invalidPublicKeyHash\":\"FindBalances_invalidPublicKeyHash__1PsS9\",\"add\":\"FindBalances_add__2JvyQ\",\"help\":\"FindBalances_help__hTZKL\"};","import React from 'react';\nimport styles from \"./Table.module.css\";\n\nimport { AddressInfo } from \"../../App\";\n\ninterface TableProps {\n  balances: AddressInfo[];\n  deleteBalanceFromBalances: (id: number) => void;\n}\n\nexport const Table = ( { balances, deleteBalanceFromBalances }: TableProps) => {\n  return (\n    <table>\n      <caption className={styles.caption}>Check balance by Public Key Hash</caption>\n      <thead>\n      <tr>\n        <th>Public Key Hash</th>\n        <th>Balance(XTZ)</th>\n        <th>Delete</th>\n      </tr>\n      </thead>\n      <tbody>\n      {balances.map(({publicKeyHash, balance,id}) => (\n        <tr key={id}>\n          <td>{publicKeyHash}</td>\n          <td>{String(Math.floor(balance / 1_000_000)) + \".\" + String(balance % 1_000_000)}</td>\n          <td>\n            <button\n              className={styles.delete}\n              onClick={() => deleteBalanceFromBalances(id)}\n            />\n          </td>\n        </tr>\n      ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport cn from \"classnames\";\nimport styles from \"./FindBalances.module.css\";\n\n\ninterface FindBalanceProps {\n  isResponseValid: boolean;\n  publicKeyHash: string;\n  setIsResponseValid: (arg: boolean) => void;\n  getBalanceByKey: () => void;\n  setPublicKeyHash: (arg: string) => void;\n}\n\nexport const FindBalance = ({\n  isResponseValid,\n  publicKeyHash,\n  setIsResponseValid,\n  getBalanceByKey,\n  setPublicKeyHash,\n}: FindBalanceProps) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.cotrolsWrapper}>\n        <input\n          className={cn(styles.inputPublicKeyHash, {\n            [styles.invalidPublicKeyHash]: !isResponseValid,\n          })}\n          value={publicKeyHash}\n          onChange={(event) => setPublicKeyHash(event.target.value.trim())}\n          onFocus={() => setIsResponseValid(true)}\n          placeholder=\"Enter Public Key Hash here...\"\n        />\n\n        <button\n          className={styles.add}\n          onClick={getBalanceByKey}\n        >\n          Add\n        </button>\n      </div>\n      {!isResponseValid &&  (\n        <span className={styles.help}>Not valid Public Hash Key</span>\n      )}\n    </div>\n\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { TezosToolkit } from '@taquito/taquito';\nimport { Table } from \"./components/Table/Table\";\nimport { FindBalance } from \"./components/FindBalance/FindBalance\";\nimport styles from './App.module.css';\n\nconst tezos = new TezosToolkit('https://mainnet-node.madfish.solutions');\n\nexport interface AddressInfo {\n  id: number;\n  publicKeyHash: string;\n  balance: number;\n}\n\nfunction App() {\n  const [publicKeyHash, setPublicKeyHash] = useState('');\n  const [balances, setBalances] = useState<AddressInfo[]>([]);\n  const [isResponseValid, setIsResponseValid] = useState(true);\n\n  useEffect(() => {\n    const balances: string | null = window.localStorage.getItem('balances');\n\n    if (typeof balances === 'string') {\n      setBalances(JSON.parse(balances));\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('balances', JSON.stringify(balances));\n  }, [balances]);\n\n\n  const getBalanceByKey = async () => {\n    try {\n      const balance = await tezos.tz.getBalance(publicKeyHash);\n\n      setBalances(prevState => {\n        if (Array.isArray(balance.c) && typeof balance.c[0] === 'number') {\n          return [...prevState, {\n            id: Number(new Date()),\n            publicKeyHash: publicKeyHash,\n            balance: balance.c[0],\n          }];\n        }\n\n        return [...prevState];\n      });\n\n      setPublicKeyHash('');\n    } catch (error) {\n       setIsResponseValid(false);\n    }\n  };\n\n  const deleteBalanceFromBalances = (id: number) => {\n    const filteredBalances = balances.filter(balance => balance.id !== id);\n    setBalances(filteredBalances);\n  };\n\n  return (\n    <div className={styles.App}>\n      <FindBalance\n        isResponseValid={isResponseValid}\n        publicKeyHash={publicKeyHash}\n        setIsResponseValid={setIsResponseValid}\n        getBalanceByKey={getBalanceByKey}\n        setPublicKeyHash={setPublicKeyHash}\n      />\n      <Table balances={balances} deleteBalanceFromBalances={deleteBalanceFromBalances} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Table_caption__1OHev\",\"delete\":\"Table_delete__3aiAo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};"],"sourceRoot":""}